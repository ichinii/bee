[gd_scene load_steps=4 format=2]

[ext_resource path="res://res/icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec3 color = vec3(0.7, 0.7, 0.1);
uniform int OCTAVES = 2;

float rand(vec2 coord) {
	return fract(sin(dot(coord, vec2(43, 78)) * 7.0) * 1000.0);
}

float noise(vec2 coord) {
	vec2 i = floor(coord);
	vec2 f = fract(coord);
	
	float a = rand(i);
	float b = rand(i + vec2(1.0, 0.0));
	float c = rand(i + vec2(0.0, 1.0));
	float d = rand(i + vec2(1.0, 1.0));
	
	//vec2 cubic = f * f * (3.0 - 2.0 * f);
	vec2 cubic = f;
	
	return mix(a, b, cubic.x) + (c - a) * cubic.y * (1.0 - cubic.x) + (d - b) * cubic.x * cubic.y;
}

float fbm(vec2 coord) {
	float value = 0.0;
	float scale = 0.5;
	
	for (int i = 0; i < OCTAVES; i++) {
		value += noise(coord) * scale;
		coord *= 2.0;
		scale *= 0.5;
	}
	
	return value;
}

uniform float RANGE = 0.2;

void fragment() {
	if ((UV.x < 0.5+RANGE) && (UV.x > 0.5-RANGE) && (UV.y < 0.5+RANGE) && (UV.y > 0.5-RANGE)) {
		vec2 coord = UV * 20.0;
	
		vec2 motion = vec2(fbm(coord + TIME * 0.5), fbm(coord + TIME * 0.2));
		float final = fbm(coord + motion); 
		COLOR = vec4(color, final*0.1);
	} else {
		COLOR = vec4(0.0);
	}
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color = Vector3( 0.7, 0.7, 0.1 )
shader_param/OCTAVES = 2
shader_param/RANGE = 0.2

[node name="fog" type="Sprite"]
visible = false
material = SubResource( 2 )
position = Vector2( 1.66913, 3.57889 )
scale = Vector2( 64.029, 38.751 )
texture = ExtResource( 1 )

